{"ast":null,"code":"var _jsxFileName = \"/Users/ashu/Desktop/ReactJS/Assignments/assignments/src/components/TaskAdder/TaskAdder.js\",\n  _s = $RefreshSig$();\nimport { React, useContext, useState } from 'react';\nimport { TaskContext } from '../../contexts/TaskContext';\nimport { CompletedContext } from '../../contexts/CompletedContext';\nimport TaskComp from '../Task_c/TaskComp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskAdder = () => {\n  _s();\n  let [taskList, addTask] = useContext(TaskContext);\n  let [localTask, updateLocalTask] = useState(\"\");\n  let [completedTasks] = useContext(CompletedContext);\n  function handleLocalTaskUpdate(e) {\n    updateLocalTask(e.target.value);\n  }\n  function handleTaskSubmission() {\n    if (localTask.length === 0) return;\n    addTask([...taskList, localTask]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col lg:w-[50%] lg:h-screen items-center justify-start mt-5 \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-bold text-8xl mb-9 p-5\",\n      children: \"tasky\\u2122\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"addtask\",\n      type: \"text\",\n      placeholder: \"Enter your task\",\n      className: \"p-5 outline-none rounded-full border-solid border-black border-2 shadow-cyan-950 shadow-lg text-3xl w-2/3\",\n      onChange: handleLocalTaskUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-yellow-400 mt-8 border-solid border-black border-2 font-bold text-4xl mb-9 rounded-full p-5 hover:bg-blue-500 hover:text-white shadow-lg shadow-black active:translate-y-2 active:shadow-none\",\n      onClick: handleTaskSubmission,\n      children: \"commit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 w-full h-fit text-center\",\n      children: /*#__PURE__*/_jsxDEV(TaskComp, {\n        task: \"---------Completed Tasks-----------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 w-full h-fit\",\n      children: completedTasks && completedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskComp, {\n        task: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 67\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskAdder, \"3sKN3GIubDQlU80My35ktyM+hY0=\");\n_c = TaskAdder;\nexport default TaskAdder;\nvar _c;\n$RefreshReg$(_c, \"TaskAdder\");","map":{"version":3,"names":["React","useContext","useState","TaskContext","CompletedContext","TaskComp","jsxDEV","_jsxDEV","TaskAdder","_s","taskList","addTask","localTask","updateLocalTask","completedTasks","handleLocalTaskUpdate","e","target","value","handleTaskSubmission","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","onClick","task","map","index","_c","$RefreshReg$"],"sources":["/Users/ashu/Desktop/ReactJS/Assignments/assignments/src/components/TaskAdder/TaskAdder.js"],"sourcesContent":["import {React,useContext,useState} from 'react'\nimport { TaskContext } from '../../contexts/TaskContext'\nimport { CompletedContext } from '../../contexts/CompletedContext'\n\nimport TaskComp from '../Task_c/TaskComp'\n\n\nconst TaskAdder = () => {\n\n    let [taskList,addTask] = useContext(TaskContext)\n\n    let [localTask,updateLocalTask] = useState(\"\")\n\n    let [completedTasks] = useContext(CompletedContext)\n\n    function handleLocalTaskUpdate(e){\n\n      updateLocalTask(e.target.value)\n\n    }\n\n    function handleTaskSubmission(){\n\n      if(localTask.length === 0) return\n\n      addTask([...taskList,localTask])\n      \n    }\n\n\n\n\n  return (\n    <div className='flex flex-col lg:w-[50%] lg:h-screen items-center justify-start mt-5 '>\n\n        <h1 className='font-bold text-8xl mb-9 p-5'>tasky&trade;</h1>\n\n        <input id='addtask' type='text' placeholder='Enter your task' className='p-5 outline-none rounded-full border-solid border-black border-2 shadow-cyan-950 shadow-lg text-3xl w-2/3' onChange={handleLocalTaskUpdate} ></input>\n\n        <button type='submit' className='bg-yellow-400 mt-8 border-solid border-black border-2 font-bold text-4xl mb-9 rounded-full p-5 hover:bg-blue-500 hover:text-white shadow-lg shadow-black active:translate-y-2 active:shadow-none' onClick={handleTaskSubmission}>commit</button>\n\n        \n        <div className='bg-green-100 w-full h-fit text-center'>\n          <TaskComp task=\"---------Completed Tasks-----------\"/>\n        </div>\n\n        <div className='bg-green-100 w-full h-fit'>\n            {completedTasks && completedTasks.map((task,index) => <TaskComp key={index} task={task}/>)}\n        </div>\n        \n    </div>\n  )\n}\n\nexport default TaskAdder"],"mappings":";;AAAA,SAAQA,KAAK,EAACC,UAAU,EAACC,QAAQ,QAAO,OAAO;AAC/C,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,gBAAgB,QAAQ,iCAAiC;AAElE,OAAOC,QAAQ,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,IAAI,CAACC,QAAQ,EAACC,OAAO,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAEhD,IAAI,CAACS,SAAS,EAACC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,IAAI,CAACY,cAAc,CAAC,GAAGb,UAAU,CAACG,gBAAgB,CAAC;EAEnD,SAASW,qBAAqBA,CAACC,CAAC,EAAC;IAE/BH,eAAe,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAEjC;EAEA,SAASC,oBAAoBA,CAAA,EAAE;IAE7B,IAAGP,SAAS,CAACQ,MAAM,KAAK,CAAC,EAAE;IAE3BT,OAAO,CAAC,CAAC,GAAGD,QAAQ,EAACE,SAAS,CAAC,CAAC;EAElC;EAKF,oBACEL,OAAA;IAAKc,SAAS,EAAC,uEAAuE;IAAAC,QAAA,gBAElFf,OAAA;MAAIc,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7DnB,OAAA;MAAOoB,EAAE,EAAC,SAAS;MAACC,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,iBAAiB;MAACR,SAAS,EAAC,2GAA2G;MAACS,QAAQ,EAAEf;IAAsB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAE9NnB,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAACP,SAAS,EAAC,kMAAkM;MAACU,OAAO,EAAEZ,oBAAqB;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGjRnB,OAAA;MAAKc,SAAS,EAAC,uCAAuC;MAAAC,QAAA,eACpDf,OAAA,CAACF,QAAQ;QAAC2B,IAAI,EAAC;MAAqC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eAENnB,OAAA;MAAKc,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACrCR,cAAc,IAAIA,cAAc,CAACmB,GAAG,CAAC,CAACD,IAAI,EAACE,KAAK,kBAAK3B,OAAA,CAACF,QAAQ;QAAa2B,IAAI,EAAEA;MAAK,GAAlBE,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEV,CAAC;AAAAjB,EAAA,CA7CKD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA+Cf,eAAeA,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}